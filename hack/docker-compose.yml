version: "3.9"

services:
  redis:
    image: redis:latest
    ports:
    - 6379:6379
  zoo1:
    image: zookeeper:3.7.0
    hostname: zoo1
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
    volumes:
      - ./Users/beni/kafka/zoo1/data
      - ./Users/beni/kafka/zoo1/datalog
  kafka1:
    image: confluentinc/cp-kafka:6.1.1
    hostname: kafka1
    restart: always
    links:
      - zoo1:zoo1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
    volumes:
      - ./usr/kafka/kafka1/data
    depends_on:
      - zoo1
  kafka2:
    image: confluentinc/cp-kafka:6.1.1
    hostname: kafka2
    restart: always
    links:
      - zoo1:zoo1
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
    volumes:
      - ./usr/kafka/kafka2/data
    depends_on:
      - zoo1

  kafka3:
    image: confluentinc/cp-kafka:6.1.1
    hostname: kafka3
    restart: always
    links:
      - zoo1:zoo1
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 24
    volumes:
      - ./usr/kafka/kafka3/data
    depends_on:
      - zoo1

  cmak:
    image: hlebalbau/kafka-manager:stable
    hostname: cmak
    restart: always
    ports:
      - "9000:9000"
    links:
      - zoo1:zoo1
    environment:
      ZK_HOSTS: "zoo1:2181"
    depends_on:
      - zoo1
      - kafka1
      - kafka2
      - kafka3
# nori flugin 설치 이슈로 따로 설치해서 가져오세요
#  es01:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
#    container_name: elasticsearch
#    environment:
#      - node.name=elasticsearch
#      - discovery.type=single-node
#      - cluster.name=es-docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - C:\es
#    ports:
#      - 9200:9200
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_HOST: localhost
      MONGO_PORT: 27017
    volumes:
      - type: bind
        source: ./data/db
        target: /data/db
    ports:
      - "27017:27017"
