plugins {
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java-library'
    id 'java-test-fixtures'
//    id "org.flywaydb.flyway" version "8.0.4"
//    id "org.flywaydb.flyway" version "5.2.4"
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


ext {
    springCloudAwsVersion = '2.2.6.RELEASE'
}


dependencies {

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.projectlombok:lombok:1.18.18'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'io.jsonwebtoken:jjwt-api:0.11.2'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.0'
    runtime 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.11.2'
//    runtimeOnly 'com.h2database:h2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

//    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.6.3') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test { // 통합 제외 (유닛)
    useJUnitPlatform()

    testLogging {
        showStandardStreams = false  // Set true, when you debug failed test
    }
}

task integrationTest(type: Test, group: 'verification') { // 통합만
    useJUnitPlatform {
        includeTags("integration")
    }

    testLogging {
        showStandardStreams = false  // Set true, when you debug failed test
    }
}

task wholeTest(type: Test, group: 'verification') { // 전체
    useJUnitPlatform()
}
