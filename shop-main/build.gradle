plugins {
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java-library'
    id 'java-test-fixtures'
}

dependencies {
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.31.5'
    implementation 'junit:junit:4.13.1'
    implementation 'org.projectlombok:lombok:1.18.18'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.6.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.6.3'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.8.4'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'com.github.maricn:logback-slack-appender:1.4.0'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
//
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'io.jsonwebtoken:jjwt-api:0.11.2'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.0'
    compileOnly 'org.projectlombok:lombok'
    compile 'io.jsonwebtoken:jjwt-impl:0.11.2'
    compile 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    compile 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.5.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    // junit4 의존성 제거
    implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: '2.2.8.RELEASE'

    // 모키토
    testImplementation "org.mockito:mockito-core:2.24.0"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.mockito", module: "mockito-all"
    }

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.4"
    }
}

test { // 통합 제외 (유닛)
    useJUnitPlatform() {
        excludeTags("integration")
    }

    testLogging {
        showStandardStreams = false  // Set true, when you debug failed test
    }
}

task integrationTest(type: Test, group: 'verification') {
    useJUnitPlatform() {
        includeTags("integration")
    }

    testLogging {
        showStandardStreams = false  // Set true, when you debug failed test
    }
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir

}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}


configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

jar {
    enabled = true
}
